@page "/account/login"
@using ChatJaffApp.Client.Account.Contracts;
@using ChatJaffApp.Client.Account.Models;
@using ChatJaffApp.Client.Account.Services;
@inject NavigationManager navigationManager
@inject CustomAuthStateProvider authStateProvider

<div class="card">
    <h4 class="card-header">Login</h4>
    <div class="card-body">
        <EditForm Model="@loginModel" OnValidSubmit="@HandleSubmit">
            <div class="form-group">
                <label>Email</label>
                <InputText data-testid="login-input-form" @bind-Value="loginModel.Email" class="form-control" />
            </div>
            <div class="form-group">
                <label>Password</label>
                <InputText data-testid="password-input-form" @bind-Value="loginModel.Password" type="password" class="form-control" />
            </div>
            <button data-testid="login-button"  class="btn btn-primary">
                Login
            </button>
            <NavLink data-testid="register-link" href="account/register" class="btn btn-link">Register</NavLink>
        </EditForm>
        <h2>@FailedLogin</h2>
    </div>
</div>

@code {
    private LoginDto loginModel = new();
    private string? FailedLogin;

    public async Task HandleSubmit()
    {
        try
        {
            await authStateProvider.Login(loginModel);
            navigationManager.NavigateTo("");
        }
        catch (Exception)
        {
            FailedLogin = "Login failed";
        }
    }
}
