@page "/account/login"
@using ChatJaffApp.Client.Account.Contracts;
@using ChatJaffApp.Client.Account.Models;
@using ChatJaffApp.Client.Account.Services;
@inject NavigationManager navigationManager
@inject CustomAuthStateProvider authStateProvider

<div class="card">
    <h4 class="card-header">Login</h4>
    <div class="card-body">
        <EditForm Model="@loginModel" OnValidSubmit="@HandleSubmit">            
            <ValidationSummary />
            <div class="form-group">
                <label>Email</label>
                <InputText id="email" @bind-Value="loginModel.Email" class="form-control" />
            </div>
            <div class="form-group">
                <label>Password</label>
                <InputText id="password" @bind-Value="loginModel.Password" type="password" class="form-control" />
            </div>
            <button id="login-button"  class="btn btn-primary mt-2">
                Login
            </button>
            <NavLink id="register-link" href="account/register" class="btn btn-link">Register</NavLink>
            <DataAnnotationsValidator />
        </EditForm>
        
    </div>
    <div>
        <h4 style="color:red;">@FailedLogin</h4>
    </div>
</div>

@code {
    private LoginDto loginModel = new();
    private string? FailedLogin;

    public async Task HandleSubmit()
    {
        try
        {
            FailedLogin = null;
            await authStateProvider.Login(loginModel);
            navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            FailedLogin = ex.Message;
        }
    }
}
