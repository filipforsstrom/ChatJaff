@page "/dashboard"
@inject IIdentityService identityService;
@inject ILocalStorageService localStorage;
@inject CustomAuthStateProvider authenticationStateProvider;
@inject NavigationManager navManager;
@inject IMemberService _memberService;
@using Blazored.LocalStorage;
@using ChatJaffApp.Client.Account.Contracts;
@using ChatJaffApp.Client.Account.Models;
@using System.Security.Claims;
@using ChatJaffApp.Client.Member.Models;
@using Microsoft.AspNetCore.Authorization;
@using ChatJaffApp.Client.Member.Contracts;
@using ChatJaffApp.Client.Member.Models;
@using ChatJaffApp.Client.Member.Models;
@attribute [Authorize];

<h3>Members</h3>

<div class="text-center bg-blue-100">
    <input class="border-4 w-1/3 rounded m-6 p-6 h-8
               border-blue-300" @bind-value="SearchText"
           @bind-value:event="oninput" placeholder="Search by title" />

    @if (!Members.Any())
    {
        <p>Loading some members...</p>
    }
    else
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Username</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var member in FilteredMembers)
                {
                    <tr>
                        <td>@member.Username</td>
                        <td>
                            <a class="btn btn-success">Show more info</a>
                            <a class="btn btn-danger">Ban user</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>


@code {

    public List<ChatMemberResponse>? Members { get; set; } = new();

    public string SearchText = "";

    protected override async Task OnInitializedAsync()
    {
        Members = await _memberService.GetAllMembers();
    }

    List<ChatMemberResponse> FilteredMembers => Members.Where(m => m.Username.ToLower().Contains(SearchText.ToLower())).ToList();
}
